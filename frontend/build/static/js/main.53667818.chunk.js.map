{"version":3,"sources":["Components/Login.js","Components/ImageUploader.js","Components/ImageUpload.js","Components/ImageGallery.js","Components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","history","useHistory","useState","user","userVal","setUserVal","passVal","setPassVal","className","type","name","value","placeholder","autoFocus","id","onChange","e","target","style","cursor","textAlign","onClick","preventDefault","axios","post","username","password","then","res","console","log","data","alert","msg","updateUser","localStorage","setItem","token","push","to","ImageUploader","image","setImage","imageName","setImageName","thum","setThum","setName","uploaded","setUploaded","uploadMsg","setUploadMsg","marginTop","class","role","data-dismiss","aria-label","aria-hidden","onSubmit","formDataVar","FormData","append","headers","getItem","imgMsg","catch","err","width","marginBottom","files","htmlFor","overflowX","href","height","borderRadius","src","alt","ImageUpload","logOut","undefined","removeItem","toDashboard","bind","get","marginLeft","lineHeight","this","Component","withRouter","ImageGallery","photos","setPhotos","loader","setLoader","useEffect","getImages","a","length","temp","i","concat","mount","setMount","display","border","App","setUser","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53667818.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/login.css';\r\nimport '../Styles/Button.css';\r\nimport {\r\n    Link,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst Login = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ userVal, setUserVal ] = useState(props.user);\r\n    const [ passVal, setPassVal ] = useState('');   \r\n    \r\n    const someFunc = (e) => { \r\n\r\n        e.preventDefault();\r\n        \r\n        axios.post('/login', { username: userVal, password: passVal })\r\n            .then(res => {\r\n\r\n                console.log(res.data);\r\n                if(res.data.username)\r\n                    alert(res.data.username);\r\n\r\n                if(res.data.password)\r\n                    alert(res.data.password);\r\n               \r\n                if(res.data.msg)\r\n                    alert(res.data.msg);   \r\n               \r\n                if(res.data.user) {\r\n\r\n                    alert(`'Welcome' ${res.data.user}`);    \r\n                    props.updateUser(res.data.user);\r\n                    localStorage.setItem('token', res.data.token);\r\n                    history.push('/imageUpload');\r\n                }\r\n                else\r\n                    history.push('/');\r\n            }); \r\n    };\r\n\r\n    return (\r\n\r\n        <div className='containerLogin'>\r\n            <h1 className='login'> Login </h1>\r\n\r\n            <form>\r\n\r\n                <input className='input' \r\n                type = \"text\" \r\n                name = \"username\" \r\n                value = { userVal } \r\n                placeholder = \"Username\" \r\n                autoFocus\r\n                id = 'UserName'\r\n                    onChange = { e => { setUserVal( e.target.value ) } }\r\n                />\r\n\r\n                <br/>\r\n\r\n                <input className='input' type = \"password\" name = \"password\" value = { passVal } placeholder = \"Password\" \r\n                    onChange = { e => { setPassVal( e.target.value ) } }\r\n                />\r\n                <p className=\"forgotPassword\" style = {{cursor: 'pointer'}}> Forgot Password ? </p> \r\n                <br/>\r\n                <div style = {{textAlign:'right'}}>\r\n                    <button className='Button' type = \"submit\" onClick = {someFunc} > Login </button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n           <div id = \"linkToSignUp\">\r\n                <p> Don't have an Account ?</p> <Link to = \"/\" id = \"link\"> SignUp </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { Fragment, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../Styles/imageUpload.css';\r\n\r\nconst ImageUploader = (props) => {\r\n\r\n    const [image, setImage] = useState();\r\n    const [imageName, setImageName] = useState('');\r\n    const [thum, setThum] = useState('');\r\n    const [name, setName] = useState('Choose Image');\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const [uploadMsg, setUploadMsg] = useState(''); \r\n\r\n    const uploadFile = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const formDataVar = new FormData();\r\n        formDataVar.append('image', image);\r\n\r\n        if(!image)\r\n            setUploadMsg('Nothing to Upload');\r\n\r\n        else {\r\n\r\n            axios.post('/imageUpload', formDataVar, { headers: {'auth-token': localStorage.getItem('token')}})\r\n                .then(res => {\r\n\r\n                    console.log(res.data);\r\n                    \r\n                    if(res.data.msg)\r\n                        return props.history.push('/');\r\n\r\n                    else if(res.data.imgMsg) {\r\n                        \r\n                        setUploadMsg(res.data.imgMsg);\r\n                        setName('Choose Image');\r\n                    }\r\n                    else {\r\n                        \r\n                        setThum(res.data.thum);\r\n                        setImageName(name);\r\n                        setName('Choose Image');\r\n                        setUploaded(true);\r\n                        setUploadMsg('Image Succesfully uploaded.');\r\n                    }\r\n                }).catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    const removeThumb = () => {\r\n\r\n        setUploaded(false);\r\n        setImage('');\r\n        setUploadMsg('');\r\n    };\r\n\r\n    const afunc = () => setUploadMsg('');\r\n\r\n    return ( \r\n        <Fragment style = {{textAlign: 'center'}}>\r\n            <div style = {{marginTop:'0rem'}}>\r\n                {\r\n                    uploadMsg ?\r\n                    <div class=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>{ uploadMsg }</strong>\r\n                        <button type=\"button\" class=\"close\" onClick = { afunc } data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <form style = {{ textAlign:'center'}} onSubmit = { uploadFile } >\r\n                <div className = 'custom-file' style = {{width:'50rem', marginBottom:'0rem'}}>\r\n                    <input type= 'file' className = 'custom-file-input' id = 'customFile' \r\n                        onChange = { e => { setImage(e.target.files[0]); setName(e.target.files[0].name)}}/>\r\n                    <label className = 'custom-file-label' htmlFor= 'customFile'> { name } </label>\r\n                    <input type = 'submit' value = 'Upload' className = 'btn btn-primary btn-block mt-1' style = {{marginBottom:'0rem'}}/>\r\n                </div>\r\n            </form>\r\n            {\r\n                uploaded ?                 \r\n                <div style = {{textAlign:'center', overflowX:'hidden'}}>\r\n                    <div className = 'row mt-5' style = {{overflowX:'hidden',textAlign:'center', marginBottom:'1rem'}}>\r\n                        <div className = 'col-md-6 m-auto'>\r\n                            <h3 className = 'text-center'>{imageName}</h3>\r\n                            <a target = '_blank' href = {thum}>\r\n                                <img className = 'img-fluid img-thumbnail' style = {{ width:'15rem', height:'12rem', overflowX:'hidden', cursor:'pointer', borderRadius:'5px'}} src = {thum} alt = 'Thumbnail' />  \r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <input style = {{textAlign:'center', marginTop:'1rem',overflowX:'hidden'}} type = 'button' onClick = { removeThumb } value = 'Close' className = 'btn btn-primary btn-inline mt-1'/> \r\n                </div> : null\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ImageUploader;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Styles/imageUpload.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ImageUploader from './ImageUploader';\r\n\r\nexport class ImageUpload extends Component {\r\n  \r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        \r\n        axios.get('/current', { headers: {'auth-token': localStorage.getItem('token')}})\r\n        .then(res => {\r\n            console.log(res.data);\r\n\r\n            if(!res.data.user) {\r\n                 \r\n                alert('Login first to proceed ahead');\r\n                this.props.updateUser(undefined);\r\n                return this.props.history.push('/');\r\n            }\r\n            else\r\n                this.props.updateUser(res.data.user);\r\n        });\r\n    };\r\n\r\n    logOut = () => {\r\n\r\n        this.props.updateUser(undefined);\r\n        localStorage.removeItem('token');\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    toDashboard = () => this.props.history.push('/dashboard');\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id = 'welcomeUser'>    \r\n                    <h1 style = {{ marginLeft: '10rem', lineHeight:'100px'}}>Welcome {this.props.user}</h1>\r\n                    <h5 style = {{ marginLeft:'40rem'}} id = 'logout' onClick = { this.toDashboard } ><u>Dashboard</u></h5>\r\n                    <h6 id = 'logout' onClick = { this.logOut } ><u> LogOut </u></h6>   \r\n                </div>\r\n                <div style = {{ textAlign:'center', marginTop:'1rem', marginBottom:'0rem'}}>\r\n                    <h4 className = 'display-4 text-center mb-3' >    \r\n                        Upload Image\r\n                    </h4>\r\n                </div>  \r\n                <ImageUploader history = { this.props.history } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ImageUpload);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Gallery from 'react-photo-gallery';\r\n\r\nconst ImageGallery = (props) => {\r\n\r\n    const [photos, setPhotos] = useState([]);\r\n    const [loader, setLoader] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        getImages();\r\n    }, []);\r\n\r\n    const getImages = async() => {\r\n        \r\n        try {\r\n\r\n            const res = await axios.get('/getImages', { headers: {'auth-token': localStorage.getItem('token')}});\r\n        \r\n            if(res.data.msg)\r\n                props.history.push('/');\r\n\r\n            else if(res.data.length !== 0) {\r\n        \r\n                photos.length = 0;\r\n                let temp = [];\r\n    \r\n                for(let i = 0; i < res.data.length; i++) \r\n                    temp[i] = { src: res.data[i], width: 6, height: 6 };\r\n    \r\n                setPhotos(photos.concat(temp));\r\n                setLoader(false);\r\n            }\r\n            else if(res.data.imgMsg)\r\n                alert(res.data.imgMsg, 'Please Upload first.');\r\n            else {\r\n                alert('Could not get data from the server.');\r\n            }    \r\n        } \r\n        catch(err) {\r\n            console.log(err);\r\n        } \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loader ? \r\n                <div style = {{ textAlign: 'center'}}>\r\n                    <div className = 'spinner-grow text-primary' role = 'status'>\r\n                        <span className = 'sr-only'>Loading...</span>\r\n                    </div>\r\n                    <div className = 'spinner-grow text-secondary' role = 'status'>\r\n                        <span className = 'sr-only'>Loading...</span>\r\n                    </div>\r\n                    <div className = 'spinner-grow text-success' role = 'status'>\r\n                        <span className = 'sr-only'>Loading...</span>\r\n                    </div>\r\n                    <div className = 'spinner-grow text-danger' role = 'status'>\r\n                        <span className = 'sr-only'>Loading...</span>\r\n                    </div>\r\n                </div> : null\r\n            }\r\n\r\n            {\r\n                photos ? <Gallery photos = { photos } /> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../Styles/imageUpload.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ImageGallery from './ImageGallery';\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const [mount, setMount] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('/current', { headers: {'auth-token': localStorage.getItem('token')}})\r\n            .then(res => {\r\n        \r\n                if(!res.data.user) {\r\n        \r\n                    alert('Login first to proceed ahead');\r\n                    props.updateUser(undefined);\r\n                    return props.history.push('/');\r\n                }\r\n                else {\r\n        \r\n                    props.updateUser(res.data.user);\r\n                    setMount(true);\r\n                }\r\n            }).catch(err => {console.log(err)});\r\n    }, []);  \r\n    \r\n    const logOut = () => {\r\n\r\n        props.updateUser(undefined);\r\n        localStorage.removeItem('token');\r\n        props.history.push('/');\r\n    };\r\n\r\n    const toImageUpload = () => props.history.push('/imageUpload');\r\n\r\n    return (\r\n        <div>\r\n            <div id = 'welcomeUser'>    \r\n                <h1 style = {{ marginLeft: '10rem', lineHeight:'100px'}} >\r\n                        Welcome {props.user}\r\n                </h1>\r\n                <h5 style = {{ marginLeft:'40rem'}} id = 'logout' onClick = { toImageUpload } >\r\n                    <u> Uploader </u>\r\n                </h5>\r\n                <h6 id = 'logout' onClick = { logOut } >\r\n                    <u> LogOut </u>\r\n                </h6>   \r\n            </div>\r\n            <div style = {{ marginBottom: '1rem', display: 'inline', textAlign: 'center'}}>\r\n                <h2 className = 'display-4 text-center mb-3'>\r\n                    <u>Images</u>\r\n                </h2>\r\n            </div>  \r\n            <div style = {{ border: '1px solid gray', borderRadius: '5px'}}>\r\n                { mount ? <ImageGallery history = { props.history } /> : null }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Login from './Components/Login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ImageUpload from './Components/ImageUpload';\nimport Dashboard from './Components/Dashboard';\n\nfunction App() {\n\n  const [ user, setUser ] = useState('');\n\n  const updateUser = (user) => setUser(user);\n\n  return (\n    <div >\n      <Router>\n        <Switch>\n          <Route exact path = '/' component = { () => <Login user = { user } updateUser = { updateUser } /> }/>\n          <Route exact path = '/imageUpload' component = { () => <ImageUpload user = { user } updateUser = { updateUser } /> }/>\n          <Route exact path = '/dashboard' component = { () => <Dashboard user = { user } updateUser = { updateUser } /> }/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}